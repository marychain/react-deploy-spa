{"version":3,"sources":["component/Items.js","App.js","reportWebVitals.js","index.js"],"names":["Items","useState","itemValue","setItemValue","items","setItems","pairs","setPairs","className","id","type","name","onChange","e","target","value","toUpperCase","onClick","concat","item","score","winner","index","length","itemsValue","map","pair","i","push","compare","result","flat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAGO,SAASA,IACZ,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAgDA,OACI,sBAAKC,UAAU,QAAf,UACI,yBAAQA,UAAU,SAAlB,UACI,uBAAOA,UAAU,sBAAqBC,GAAG,QAAQC,KAAK,OAAQC,KAAK,QAAQC,SAjDjE,SAACC,GACnBV,EAAaU,EAAEC,OAAOC,MAAMC,kBAiDpB,wBAAQR,UAAU,wBAAwBS,QA9C5B,SAACJ,GACvBR,EAASD,EAAMc,OAAO,CAAC,CACnBC,KAAMjB,EACNkB,MAAO,EACPC,OAAQ,GACRC,MAAOlB,EAAMmB,OAAO,MAQxB,IALA,IAAIC,EAAapB,EAAMqB,KAAI,SAAAN,GACvB,OAAOA,EAAKA,QAGZO,EAAO,GACFC,EAAI,EAAGA,GAAKH,EAAWD,OAAO,EAAGI,IACtCD,EAAKE,KAAKC,EAAQF,EAAGH,IAGzB,SAASK,EAAQP,EAAOE,GAGpB,IAFA,IAAIM,EAAS,GAEJH,EAAIL,EAAOK,GAAKH,EAAWD,OAAO,EAAGI,IACtCH,EAAWF,KAAWE,EAAWG,IAGrCG,EAAOF,KAAK,CAACJ,EAAWF,GAAQE,EAAWG,KAE/C,OAAOG,EAGXJ,EAAOA,EAAKK,OACZxB,EAASmB,IAgBD,oBAEJ,uBAAMlB,UAAU,OAAhB,UACI,wBAAOA,UAAU,cAAjB,UACI,uBAAQA,UAAU,oBAAlB,SACI,qBAAIA,UAAU,wBAAd,UACI,sCACA,uCACA,6CAGR,uBAAOA,UAAU,oBAAjB,SACKJ,EAAMqB,KAAI,SAACN,EAAMQ,GAAP,OACP,+BACI,6BAAMR,EAAKA,OACX,6BAAMA,EAAKC,QACX,6BAAMD,EAAKE,WAHNF,EAAKG,eAQ1B,sBAAKd,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,2BACEF,EAAMmB,KAAI,SAACC,EAAMC,GAAP,OACR,sBAAanB,UAAU,uBAAvB,UACA,wBAASO,MAAOW,EAAK,GAAIlB,UAAU,sCAAnC,SAA0EkB,EAAK,KAC/E,wBAASX,MAAOW,EAAK,GAAGlB,UAAU,sCAAlC,SAAyEkB,EAAK,OAFpEC,e,kBCrEnBK,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAACR,EAAD,OCISiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.816a9730.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../assets/css/items.css'\r\n\r\nexport function Items () {\r\n    const [itemValue, setItemValue] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [pairs, setPairs] = useState([]);\r\n\r\n    const onChangeValue = (e) => {\r\n        setItemValue(e.target.value.toUpperCase());\r\n    }\r\n\r\n    const onBtnClickHandler = (e) => { \r\n        setItems(items.concat([{\r\n            item: itemValue,\r\n            score: 0,\r\n            winner: '',\r\n            index: items.length+1        \r\n        }]));\r\n        \r\n        let itemsValue = items.map(item => {\r\n            return item.item\r\n        });\r\n\r\n        let pair = [];\r\n        for (let i = 0; i <= itemsValue.length-1; i++ ) {\r\n            pair.push(compare(i, itemsValue))\r\n        };\r\n        \r\n        function compare(index, itemsValue) {\r\n            let result = [];\r\n            \r\n            for (let i = index; i <= itemsValue.length-1; i++) {\r\n                if (itemsValue[index] === itemsValue[i]) {\r\n                    continue;\r\n                }\r\n                result.push([itemsValue[index], itemsValue[i]]);\r\n            };\r\n            return result;\r\n        };\r\n        \r\n        pair = pair.flat()\r\n        setPairs(pair);\r\n    }\r\n\r\n    // const onClickButtonItem = (e) => {\r\n    //     setItems(items.forEach(item => {\r\n    //         if(e.target.value === item.item) {\r\n    //             item.score++;\r\n    //             console.log(item.score)\r\n    //         }\r\n            \r\n    //     }))\r\n    // }\r\n    return (\r\n        <div className='Items'>\r\n            <header className='header'>\r\n                <input className='header__input input'id='clear' type=\"text\"  name='items' onChange={onChangeValue} />\r\n                <button className='header__button button' onClick={onBtnClickHandler}>Add</button>\r\n            </header>\r\n            <main className='main'>\r\n                <table className='main__table'>\r\n                    <thead  className='main__table__head'>\r\n                        <tr className='main__table__head__tr'>\r\n                            <th>Item</th>\r\n                            <th>Score</th>\r\n                            <th>Winner</th>   \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className='main__table__body'>\r\n                        {items.map((item, i) => (\r\n                            <tr key={item.index}>\r\n                                <th >{item.item}</th>\r\n                                <td >{item.score}</td>\r\n                                <td >{item.winner}</td>  \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <div className='main__compare'>\r\n                    <h3 className='main__compare__head'>Compare Items</h3>\r\n                    { pairs.map((pair, i) => (\r\n                        <div key={i} className='main__compare__items'>\r\n                        <button  value={pair[0]} className='main__compare__items__button button'>{pair[0]}</button>\r\n                        <button  value={pair[1]}className='main__compare__items__button button'>{pair[1]}</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n","import { Items } from './component/Items.js';\nimport './assets/css/button.css';\nimport './assets/css/input.css';\nimport './assets/css/table.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Items />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}